(()=>{var __webpack_modules__={"./resources/assets/scripts/time_tracker.js":
/*!**************************************************!*\
  !*** ./resources/assets/scripts/time_tracker.js ***!
  \**************************************************/()=>{eval("console.log('time_tracker.js carregado');\nvar timers = {};\nvar isTracking = false;\nvar currentTarefaId = null;\nfunction startTracker(tarefaId) {\n  console.log('startTracker chamado para tarefa', tarefaId);\n  if (!timers[tarefaId]) {\n    fetch(\"/painel/tarefas/\".concat(tarefaId, \"/start\"), {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.status === 'success') {\n        var startTime = new Date(data.start_time + 'Z').getTime();\n        timers[tarefaId] = {\n          startTime: startTime,\n          tempoUtilizadoHoras: parseInt(data.tempo_utilizado_horas) || 0,\n          tempoUtilizadoMinutos: parseInt(data.tempo_utilizado_minutos) || 0,\n          interval: setInterval(function () {\n            return updateTimer(tarefaId);\n          }, 1000)\n        };\n        isTracking = true;\n        currentTarefaId = tarefaId;\n        window.onbeforeunload = handleBeforeUnload;\n        var startBtn = document.querySelector(\"#start-btn-\".concat(tarefaId));\n        var stopBtn = document.querySelector(\"#stop-btn-\".concat(tarefaId));\n        console.log('Botões encontrados:', startBtn, stopBtn);\n        if (startBtn && stopBtn) {\n          startBtn.style.display = 'none';\n          stopBtn.style.display = 'inline';\n        } else {\n          console.error(\"Bot\\xF5es de iniciar/parar n\\xE3o encontrados para tarefa \".concat(tarefaId));\n        }\n      }\n    });\n  }\n}\nfunction stopTracker(tarefaId) {\n  var forceStop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  console.log('stopTracker chamado para tarefa', tarefaId);\n  var timer = timers[tarefaId];\n  if (!timer) return;\n  var elapsedTime = Math.floor((Date.now() - timer.startTime) / 1000);\n  if (!forceStop && elapsedTime < 60) {\n    if (!confirm('Tempo insuficiente para registrar. Deseja parar mesmo assim?')) {\n      return;\n    }\n  }\n  fetch(\"/painel/tarefas/\".concat(tarefaId, \"/stop\"), {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRF-TOKEN': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n    },\n    body: JSON.stringify({\n      elapsedTime: forceStop ? 0 : elapsedTime\n    })\n  }).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    if (data.status === 'success') {\n      clearInterval(timer.interval);\n      delete timers[tarefaId];\n      isTracking = false;\n      window.onbeforeunload = null;\n      updateTaskUI(tarefaId, data.tempo_utilizado_horas, data.tempo_utilizado_minutos);\n    } else if (data.status === 'already_stopped') {\n      alert('A tarefa já foi encerrada.');\n    }\n  });\n}\nfunction updateTimer(tarefaId) {\n  var timer = timers[tarefaId];\n  if (!timer || !timer.startTime) return;\n  var elapsedTime = Math.floor((Date.now() - timer.startTime) / 1000);\n  var additionalHours = Math.floor(elapsedTime / 3600);\n  var additionalMinutes = Math.floor(elapsedTime % 3600 / 60);\n  var additionalSeconds = elapsedTime % 60;\n  var timerElement = document.querySelector(\"#timer-\".concat(tarefaId));\n  if (timerElement) {\n    var currentText = timerElement.textContent.split(' (+')[0];\n    var runningTime = \"(+\".concat(additionalHours, \"h \").concat(additionalMinutes, \"m \").concat(additionalSeconds, \"s)\");\n    timerElement.textContent = \"\".concat(currentText, \" \").concat(runningTime);\n  }\n}\nfunction updateTaskUI(tarefaId, horas, minutos) {\n  var startBtn = document.querySelector(\"#start-btn-\".concat(tarefaId));\n  var stopBtn = document.querySelector(\"#stop-btn-\".concat(tarefaId));\n  var timerElement = document.querySelector(\"#timer-\".concat(tarefaId));\n  if (startBtn && stopBtn) {\n    startBtn.style.display = 'inline';\n    stopBtn.style.display = 'none';\n  }\n  if (timerElement) {\n    timerElement.textContent = \"\".concat(horas, \"h \").concat(minutos, \"m\");\n  }\n}\nfunction handleBeforeUnload(event) {\n  if (isTracking) {\n    event.preventDefault();\n    event.returnValue = 'Você ainda não parou a tarefa em andamento. Deseja sair mesmo assim?';\n  }\n}\nwindow.startTracker = startTracker;\nwindow.stopTracker = stopTracker;\nsetInterval(function () {\n  if (isTracking && currentTarefaId !== null) {\n    fetch(\"/painel/tarefas/\".concat(currentTarefaId, \"/check-status\")).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (!data.in_progress) {\n        alert('A tarefa em andamento foi encerrada.');\n        location.reload();\n      }\n    });\n  }\n}, 60000);\nwindow.addEventListener('load', function () {\n  var tarefas = document.querySelectorAll('[id^=\"timer-\"]');\n  tarefas.forEach(function (tarefa) {\n    var tarefaId = tarefa.id.split('-')[1];\n    fetch(\"/painel/tarefas/\".concat(tarefaId, \"/check-status\")).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      if (data.in_progress) {\n        var startTime = new Date(data.start_time + 'Z').getTime();\n        var currentTime = Date.now();\n        var elapsedTime = currentTime - startTime;\n        timers[tarefaId] = {\n          startTime: startTime,\n          tempoUtilizadoHoras: parseInt(data.tempo_utilizado_horas) || 0,\n          tempoUtilizadoMinutos: parseInt(data.tempo_utilizado_minutos) || 0,\n          interval: setInterval(function () {\n            return updateTimer(tarefaId);\n          }, 1000)\n        };\n        isTracking = true;\n        currentTarefaId = tarefaId;\n        var startBtn = document.querySelector(\"#start-btn-\".concat(tarefaId));\n        var stopBtn = document.querySelector(\"#stop-btn-\".concat(tarefaId));\n        if (startBtn && stopBtn) {\n          startBtn.style.display = 'none';\n          stopBtn.style.display = 'inline';\n        }\n      }\n    });\n  });\n});\n\n//# sourceURL=webpack:///./resources/assets/scripts/time_tracker.js?")}},__webpack_exports__={};__webpack_modules__["./resources/assets/scripts/time_tracker.js"]()})();